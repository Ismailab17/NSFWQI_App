# ===============================
# model_train.py
# ===============================

import pandas as pd
import numpy as np
import joblib
from sklearn.model_selection import train_test_split
from sklearn.neural_network import MLPRegressor
from sklearn.preprocessing import StandardScaler

# Load dataset
df = pd.read_csv("NSF.CCME.csv")

# Features (X) and Target (y)
X = df[["NO3", "COD", "FC", "BOD", "TDS"]]
y = df["NSF"]

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.3, random_state=42
)

# Feature scaling
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)

# Build and train MLP model
mlp = MLPRegressor(
    hidden_layer_sizes=(3,),
    activation="logistic",
    alpha=0.0001,
    learning_rate="constant",
    solver="lbfgs",
    max_iter=10000,
    random_state=42
)

mlp.fit(X_train_scaled, y_train)

# Save model and scaler
joblib.dump(mlp, "mlp_model.pkl")
joblib.dump(scaler, "scaler.pkl")

print("âœ… Model and scaler saved successfully!")
